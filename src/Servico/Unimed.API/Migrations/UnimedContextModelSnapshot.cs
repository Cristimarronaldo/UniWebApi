// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Unimed.API.Repositorio.Data;

namespace Unimed.API.Migrations
{
    [DbContext(typeof(UnimedContext))]
    partial class UnimedContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Unimed.API.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NomeMae")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("PlanoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlanoId")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Unimed.API.Models.ClienteExame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataExame")
                        .HasColumnType("DateTime");

                    b.Property<Guid>("ExameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeMedico")
                        .HasColumnType("varchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.HasIndex("ExameId")
                        .IsUnique();

                    b.ToTable("ClienteExames");
                });

            modelBuilder.Entity("Unimed.API.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Unimed.API.Models.Exame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Exames");
                });

            modelBuilder.Entity("Unimed.API.Models.Plano", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomePlano")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NumeroPlano")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Planos");
                });

            modelBuilder.Entity("Unimed.API.Models.Cliente", b =>
                {
                    b.HasOne("Unimed.API.Models.Plano", "Plano")
                        .WithOne("Cliente")
                        .HasForeignKey("Unimed.API.Models.Cliente", "PlanoId")
                        .IsRequired();

                    b.Navigation("Plano");
                });

            modelBuilder.Entity("Unimed.API.Models.ClienteExame", b =>
                {
                    b.HasOne("Unimed.API.Models.Cliente", "Cliente")
                        .WithOne("ClienteExame")
                        .HasForeignKey("Unimed.API.Models.ClienteExame", "ClienteId")
                        .IsRequired();

                    b.HasOne("Unimed.API.Models.Exame", "Exame")
                        .WithOne("ClienteExame")
                        .HasForeignKey("Unimed.API.Models.ClienteExame", "ExameId")
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Exame");
                });

            modelBuilder.Entity("Unimed.API.Models.Endereco", b =>
                {
                    b.HasOne("Unimed.API.Models.Cliente", "Cliente")
                        .WithOne("Endereco")
                        .HasForeignKey("Unimed.API.Models.Endereco", "ClienteId")
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Unimed.API.Models.Cliente", b =>
                {
                    b.Navigation("ClienteExame");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Unimed.API.Models.Exame", b =>
                {
                    b.Navigation("ClienteExame");
                });

            modelBuilder.Entity("Unimed.API.Models.Plano", b =>
                {
                    b.Navigation("Cliente");
                });
#pragma warning restore 612, 618
        }
    }
}
